pipeline {
    agent any
    environment {
        VENV = 'venv'
    }
    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'YOUR_GITHUB_CREDENTIALS_ID', url: 'https://github.com/abderrahmaneOU/Alx-Backend-Python.git'
                sh 'git branch'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'python3 -m venv $VENV'
                sh 'pip3 install --upgrade pip'
                sh 'pip3 install -r messaging_app/requirements.txt'
                sh './venv/bin/pip install --upgrade pip'
                sh './venv/bin/pip install -r messaging_app/requirements.txt'
            }
        }
        stage('Run Tests') {
            steps {
                sh './venv/bin/pytest messaging_app/ --junitxml=pytest-report.xml'
            }
            post {
                always {
                    junit 'pytest-report.xml'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t yourdockerhubusername/messaging_app:latest messaging_app/'
            }
        }
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'YOUR_DOCKERHUB_CREDENTIALS_ID', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    sh 'docker push yourdockerhubusername/messaging_app:latest'
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'pytest-report.xml', allowEmptyArchive: true
        }
    }
}
