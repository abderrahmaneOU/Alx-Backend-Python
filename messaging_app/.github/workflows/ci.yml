name: Django CI

on:
  push:
    paths:
      - "messaging_app/**"
  pull_request:
    paths:
      - "messaging_app/**"

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: messaging_db
          MYSQL_USER: messaging_user
          MYSQL_PASSWORD: messaging_pass
          MYSQL_ROOT_PASSWORD: rootpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    env:
      MYSQL_DATABASE: messaging_db
      MYSQL_USER: messaging_user
      MYSQL_PASSWORD: messaging_pass
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_HOST: 127.0.0.1
      MYSQL_PORT: 3306
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt
      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h127.0.0.1 -pmessaging_pass --silent; do
            sleep 2
          done
      - name: Run migrations
        run: |
          cd messaging_app
          python manage.py migrate
      - name: Run tests
        run: |
          cd messaging_app
          python manage.py test
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 messaging_app
      - name: Run coverage
        run: |
          pip install coverage
          cd messaging_app
          coverage run manage.py test
          coverage xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: messaging_app/coverage.xml
